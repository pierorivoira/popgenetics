plot.probability.of.survival.2.or.more.lineages = function()
{
G = as.numeric(readline(prompt='Please enter the number of generations: '))
n = as.numeric(readline(prompt='Please enter the number of founders: '))
lambda = as.numeric(readline(prompt='Please enter the average number of daughters per mother: '))
p = NULL
q = NULL
gamma = NULL
generation = seq(1,G)
for(i in 1:G)
{
if (i == 1) p[i] = exp(-lambda)
else p[i] = exp(lambda*(p[i-1]-1))
q[i] = 1 - p[i]
gamma[i] = 1 - p[i]^n - n*p[i]^(n-1)*q[i]
}
par(bg='dark grey', fg = 'white', col.axis = 'white', col.lab = 'white')
plot(generation,gamma,col="black",type="l",lwd=5,ylim=c(0,1.0),xlab="Generation",ylab="p(survival â‰¥ 2 lineages)",cex.lab=2,cex.axis=2)

if (lambda <= 0.75)
legend(G/2, 0.9, legend=c('n', 'n+7', 'n+10', 'n+30', 'n+50', 'n+400', 'n+500', 'n + 9000', 'n + 90000'), col=c('black', 'cyan', 'brown4', 'darkgreen', 'red', 'blue', 'darkslategray', 'darkmagenta', 'green'), lwd=5, lty=2:3, cex=1)

else
legend(0.1, 0.5, legend=c('n', 'n+7', 'n+10', 'n+30', 'n+50', 'n+400', 'n+500', 'n + 9000', 'n + 90000'), col=c('black', 'cyan', 'brown4', 'darkgreen', 'red', 'blue', 'darkslategray', 'darkmagenta', 'green'), lwd=5, lty=2:3, cex=1)

n = n + 7
for(i in 1:G)
{
if (i == 1) p[i] = exp(-lambda)
else p[i] = exp(lambda*(p[i-1]-1))
q[i] = 1 - p[i]
gamma[i] = 1 - p[i]^n - n*p[i]^(n-1)*q[i]
}
lines(generation,gamma,col="cyan",lwd=5)
n = n + 10
for(i in 1:G)
{
if (i == 1) p[i] = exp(-lambda)
else p[i] = exp(lambda*(p[i-1]-1))
q[i] = 1 - p[i]
gamma[i] = 1 - p[i]^n - n*p[i]^(n-1)*q[i]
}
lines(generation,gamma,col="brown4",lwd=5)
n = n + 30
for(i in 1:G)
{
if (i == 1) p[i] = exp(-lambda)
else p[i] = exp(lambda*(p[i-1]-1))
q[i] = 1 - p[i]
gamma[i] = 1 - p[i]^n - n*p[i]^(n-1)*q[i]
}
lines(generation,gamma,col="darkgreen",lwd=5)
n = n + 50
for(i in 1:G)
{
if (i == 1) p[i] = exp(-lambda)
else p[i] = exp(lambda*(p[i-1]-1))
q[i] = 1 - p[i]
gamma[i] = 1 - p[i]^n - n*p[i]^(n-1)*q[i]
}
lines(generation,gamma,col="red",lwd=5)
n = n + 400
for(i in 1:G)
{
if (i == 1) p[i] = exp(-lambda)
else p[i] = exp(lambda*(p[i-1]-1))
q[i] = 1 - p[i]
gamma[i] = 1 - p[i]^n - n*p[i]^(n-1)*q[i]
}
lines(generation,gamma,col="blue",lwd=5)
n = n + 500
for(i in 1:G)
{
if (i == 1) p[i] = exp(-lambda)
else p[i] = exp(lambda*(p[i-1]-1))
q[i] = 1 - p[i]
gamma[i] = 1 - p[i]^n - n*p[i]^(n-1)*q[i]
}
lines(generation,gamma,col="darkslategray",lwd=5)
n = n + 9000
for(i in 1:G)
{
if (i == 1) p[i] = exp(-lambda)
else p[i] = exp(lambda*(p[i-1]-1))
q[i] = 1 - p[i]
gamma[i] = 1 - p[i]^n - n*p[i]^(n-1)*q[i]
}
lines(generation,gamma,col="darkmagenta",lwd=5)
n = n + 90000
for(i in 1:G)
{
if (i == 1) p[i] = exp(-lambda)
else p[i] = exp(lambda*(p[i-1]-1))
q[i] = 1 - p[i]
gamma[i] = 1 - p[i]^n - n*p[i]^(n-1)*q[i]
}
lines(generation,gamma,col="green",lwd=5)
}

